{
  "name": "go-main-runner",
  "displayName": "Go Main Runner",
  "description": "run or debug main function in-place",
  "version": "1.2.15",
  "publisher": "hedzr",
  "license": "Apache 2.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/hedzr/vscode-ext-go-main-runner"
  },
  "keywords": [
    "main-func",
    "golang",
    "runner",
    "debugger"
  ],
  "galleryBanner": {
    "color": "#F2F2F2",
    "theme": "light"
  },
  "extensionDependencies": [
    "golang.go"
  ],
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Other",
    "Debuggers",
    "Programming Languages",
    "Testing"
  ],
  "icon": "images/icon.png",
  "activationEvents": [
    "onLanguage:go"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "title": "Enable CodeLens",
        "command": "go-main-runner.codeLens.enable",
        "category": "Go Main Runner"
      },
      {
        "title": "Disable Codelens",
        "command": "go-main-runner.codeLens.disable",
        "category": "Go Main Runner"
      },
      {
        "title": "Run or Debug main()",
        "command": "go-main-runner.codeLens.runOrDebug",
        "category": "Go Main Runner"
      },
      {
        "title": "Enable Running main func Under Package context",
        "command": "go-main-runner.codeLens.runAsPackage",
        "category": "Go Main Runner"
      },
      {
        "title": "Disable Running main func Under Package context (instead of running the single file)",
        "command": "go-main-runner.codeLens.runAsSingleFile",
        "category": "Go Main Runner"
      },
      {
        "title": "Enable Verbose BuildTag",
        "command": "go-main-runner.codeLens.buildTags.enableVerbose",
        "category": "Go Main Runner"
      },
      {
        "title": "Disable Verbose BuildTag",
        "command": "go-main-runner.codeLens.buildTags.disableVerbose",
        "category": "Go Main Runner"
      },
      {
        "title": "Toggle Verbose BuildTag",
        "command": "go-main-runner.codeLens.buildTags.toggleVerbose",
        "category": "Go Main Runner"
      },
      {
        "title": "Enable Delve BuildTag",
        "command": "go-main-runner.codeLens.buildTags.enableDelve",
        "category": "Go Main Runner"
      },
      {
        "title": "Disable Delve BuildTag",
        "command": "go-main-runner.codeLens.buildTags.disableDelve",
        "category": "Go Main Runner"
      },
      {
        "title": "Toggle Delve BuildTag",
        "command": "go-main-runner.codeLens.buildTags.toggleDelve",
        "category": "Go Main Runner"
      },
      {
        "title": "Enable Docker BuildTag",
        "command": "go-main-runner.codeLens.buildTags.enableDocker",
        "category": "Go Main Runner"
      },
      {
        "title": "Disable Docker BuildTag",
        "command": "go-main-runner.codeLens.buildTags.disableDocker",
        "category": "Go Main Runner"
      },
      {
        "title": "Toggle Docker BuildTag",
        "command": "go-main-runner.codeLens.buildTags.toggleDocker",
        "category": "Go Main Runner"
      },
      {
        "title": "Enable K8s BuildTag",
        "command": "go-main-runner.codeLens.buildTags.enableK8s",
        "category": "Go Main Runner"
      },
      {
        "title": "Disable Delve BuildTag",
        "command": "go-main-runner.codeLens.buildTags.disableK8s",
        "category": "Go Main Runner"
      },
      {
        "title": "Toggle K8s BuildTag",
        "command": "go-main-runner.codeLens.buildTags.toggleK8s",
        "category": "Go Main Runner"
      },
      {
        "title": "Enable Istio BuildTag",
        "command": "go-main-runner.codeLens.buildTags.enableIstio",
        "category": "Go Main Runner"
      },
      {
        "title": "Disable Istio BuildTag",
        "command": "go-main-runner.codeLens.buildTags.disableIstio",
        "category": "Go Main Runner"
      },
      {
        "title": "Toggle Istio BuildTag",
        "command": "go-main-runner.codeLens.buildTags.toggleIstio",
        "category": "Go Main Runner"
      },
      {
        "title": "Enable Vscode BuildTag",
        "command": "go-main-runner.codeLens.buildTags.enableVscode",
        "category": "Go Main Runner"
      },
      {
        "title": "Disable Vscode BuildTag",
        "command": "go-main-runner.codeLens.buildTags.disableVscode",
        "category": "Go Main Runner"
      },
      {
        "title": "Toggle Vscode BuildTag",
        "command": "go-main-runner.codeLens.buildTags.toggleVscode",
        "category": "Go Main Runner"
      },
      {
        "title": "Enable Launch Configs at Status Bar",
        "command": "go-main-runner.launchConfigs.enableStatusItem",
        "category": "Go Main Runner"
      },
      {
        "title": "Disable Launch Configs at Status Bar",
        "command": "go-main-runner.launchConfigs.disableStatusItem",
        "category": "Go Main Runner"
      },
      {
        "title": "Run with Launch Configs...",
        "command": "go-main-runner.launchConfigs.runOrDebug",
        "category": "Go Main Runner"
      },
      {
        "title": "Debug...",
        "command": "go-main-runner.launchConfigs.showPicker",
        "category": "Go Main Runner"
      }
    ],
    "keybindings": [
      {
        "command": "go-main-runner.codeLens.enable",
        "key": "ctrl+f10",
        "mac": "cmd+f10",
        "when": "editorTextFocus"
      },
      {
        "command": "go-main-runner.codeLens.disable",
        "key": "ctrl+shift+f10",
        "mac": "cmd+alt+f10",
        "when": "editorTextFocus"
      },
      {
        "command": "go-main-runner.codeLens.buildTags.enableVerbose",
        "key": "ctrl+f9",
        "mac": "cmd+f9",
        "when": "editorTextFocus"
      },
      {
        "command": "go-main-runner.codeLens.buildTags.disableVerbose",
        "key": "ctrl+shift+f9",
        "mac": "cmd+alt+f9",
        "when": "editorTextFocus"
      },
      {
        "command": "go-main-runner.codeLens.buildTags.toggleVerbose",
        "key": "ctrl+shift+v",
        "mac": "cmd+alt+v",
        "when": "editorTextFocus"
      },
      {
        "command": "go-main-runner.codeLens.buildTags.toggleDelve",
        "key": "ctrl+shift+d",
        "mac": "cmd+alt+d",
        "when": "editorTextFocus"
      },
      {
        "command": "go-main-runner.codeLens.buildTags.toggleDocker",
        "key": "ctrl+shift+r",
        "mac": "cmd+alt+r",
        "when": "editorTextFocus"
      },
      {
        "command": "go-main-runner.codeLens.buildTags.toggleK8s",
        "key": "ctrl+shift+k",
        "mac": "cmd+alt+k",
        "when": "editorTextFocus"
      },
      {
        "command": "go-main-runner.codeLens.buildTags.toggleIstio",
        "key": "ctrl+shift+i",
        "mac": "cmd+alt+i",
        "when": "editorTextFocus"
      },
      {
        "command": "go-main-runner.launchConfigs.runOrDebug",
        "key": "ctrl+m ctrl+l",
        "mac": "cmd+m cmd+l",
        "when": "debuggersAvailable && debugState != 'initializing' && editorLangId == 'go'"
      },
      {
        "command": "go-main-runner.codeLens.runOrDebug",
        "key": "ctrl+m ctrl+r",
        "mac": "cmd+k cmd+r",
        "when": "editorTextFocus && editorLangId == 'go'"
      },
      {
        "key": "ctrl+m ctrl+n",
        "mac": "cmd+m cmd+n",
        "command": "workbench.action.debug.run",
        "when": "debuggersAvailable && debugState != 'initializing'"
      },
      {
        "key": "ctrl+m ctrl+b",
        "mac": "cmd+m cmd+b",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
      }
    ],
    "configuration": {
      "title": "Go Main Runner",
      "properties": {
        "go-main-runner.main.enableCodeLens": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable Run/Debug shortcut links onto func main()",
          "order": 0
        },
        "go-main-runner.main.run.mode": {
          "type": "string",
          "enum": [
            "runInTerminal",
            "asTask"
          ],
          "default": "asTask",
          "description": "run mode of 'go run'",
          "order": 100
        },
        "go-main-runner.main.run.asPackage": {
          "type": "boolean",
          "default": true,
          "title": "Run main func under package context",
          "description": "Run main func under package context or not (default is running the single file)",
          "order": 101
        },
        "go-main-runner.main.run.tags.verbose": {
          "type": "boolean",
          "default": false,
          "description": "add 'verbose' to build tags",
          "order": 106
        },
        "go-main-runner.main.run.tags.delve": {
          "type": "boolean",
          "default": false,
          "description": "add 'delve' to build tags",
          "order": 107
        },
        "go-main-runner.main.run.tags.docker": {
          "type": "boolean",
          "default": false,
          "description": "add 'docker' to build tags",
          "order": 108
        },
        "go-main-runner.main.run.tags.k8s": {
          "type": "boolean",
          "default": false,
          "description": "add 'k8s' to build tags",
          "order": 108
        },
        "go-main-runner.main.run.tags.istio": {
          "type": "boolean",
          "default": false,
          "description": "add 'istio' to build tags",
          "order": 109
        },
        "go-main-runner.main.run.tags.vscode": {
          "type": "boolean",
          "default": false,
          "description": "add 'vscode' to build tags",
          "order": 111
        },
        "go-main-runner.main.run.tags.more": {
          "type": "string",
          "default": "",
          "description": "build tags, comma separated strings",
          "order": 119
        },
        "go-main-runner.main.run.verbose": {
          "type": "boolean",
          "default": false,
          "description": "add '-v' to 'go run'",
          "order": 150
        },
        "go-main-runner.main.run.no-optmize": {
          "type": "boolean",
          "default": false,
          "description": "add '-gcflags=all=\"-N -l\"' to 'go run'",
          "order": 160
        },
        "go-main-runner.main.run.min-size": {
          "type": "boolean",
          "default": false,
          "description": "add '-ldflags=\"-s -w\"' to 'go run'",
          "order": 161
        },
        "go-main-runner.main.run.configs": {
          "type": "array",
          "default": [],
          "description": "Not yet",
          "order": 190
        },
        "go-main-runner.launch.mode": {
          "type": "string",
          "enum": [
            "runInTerminal",
            "run",
            "debug"
          ],
          "enumDescriptions": [
            "Go Run In Terminal window",
            "Delve Run (vscode way)",
            "Delve Debug (vscode way)"
          ],
          "default": "runInTerminal",
          "description": "The mode of launching from config could be: runInTerminal, run, debug.",
          "order": 200
        },
        "go-main-runner.launch.enableStatusItem": {
          "type": "boolean",
          "default": true,
          "description": "Show/Hide statusbar item for picking launch configs",
          "order": 220
        },
        "go-main-runner.launch.enableStatusItemOnce": {
          "type": "boolean",
          "default": true,
          "description": "Hide statusbar item after first picked",
          "order": 221
        }
      }
    },
    "taskDefinitions": [
      {
        "type": "go-main-runner",
        "required": [
          "task"
        ],
        "properties": {
          "task": {
            "type": "string",
            "description": "The Go Run task to customize"
          },
          "file": {
            "type": "string",
            "description": "The Go source file or folder that provides the task. Can be omitted."
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "echo pnpm run package; npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "echo webpack --mode production --devtool hidden-source-map; pnpm vsce package --no-dependencies",
    "publish": "pnpm vsce publish --no-dependencies",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "watch-tests-2": "tsc -watch -p ./",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/common-ancestor-path": "^1.0.2",
    "@types/mocha": "^10.0.10",
    "@types/node": "~18.19.71",
    "@types/vscode": "^1.75.0",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "@vscode/test-cli": "^0.0.8",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.18.0",
    "ts-loader": "^9.5.2",
    "typescript": "^5.7.3",
    "webpack": "^5.97.1",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "common-ancestor-path": "^1.0.1"
  }
}
